package rmiage.client.gui;


import java.awt.Component;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.Serializable;
import java.rmi.RemoteException;

import javax.swing.JPanel;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultTreeModel;
import rmiage.client.controller.NetworkManager;
import rmiage.common.interfaces.PanelDescriptor;
import rmiage.common.interfaces.TreeModel;
import rmiage.common.interfaces.NavigTreeNode;
import rmiage.common.interfaces.Panel;
import rmiage.server.controller.SessionController;


public class MainWindow extends javax.swing.JFrame {

    /** Creates new form MainWindow */
    protected MainWindow() {
        super();
        initComponents();
    }

    public MainWindow(NetworkManager nm) {
        this();
        this.networkManager = nm;
        jTreeFocListen = new TreeSelectionListener() {

              private void dumpInfo(TreeSelectionEvent e) throws RemoteException, InstantiationException, IllegalAccessException {
                /* System.out.println("Source  : " + e.getSource());
                System.out.println("New Seleted Path : "
                    +e.getNewLeadSelectionPath());
                System.out.println("Old Seleted Path : "
                        +e.getOldLeadSelectionPath());
                        */
            	GraphicalTreenode o =(GraphicalTreenode) ((JTree)e.getSource()).getLastSelectedPathComponent();
                NavigTreeNode n = o.getDataTreeNode(); 
                System.err.println(n.getClass()+" "+n);
                PanelDescriptor pd =(PanelDescriptor) networkManager.getSessionController().getNavigNodePanel(n);
                Panel pn = (Panel)pd.getPannelClass().newInstance();
                pn.initialize(pd.getInitialData(), networkManager.getSessionController());
                mainPanel.add(pn);
              }

			public void valueChanged(TreeSelectionEvent e) {
				// TODO Auto-generated method stub
				try {
					try {
						dumpInfo(e);
					} catch (InstantiationException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					} catch (IllegalAccessException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				
			}
            };
            
            this.navigTree.addTreeSelectionListener(this.jTreeFocListen);
    }
    
    public GraphicalTreenode getGraphicalTreeNodes(NavigTreeNode node) throws RemoteException{
    	//System.err.println("Finding subnodes for "+node);
    	GraphicalTreenode ret = new GraphicalTreenode(node);
    	for(NavigTreeNode n : node.getChildNodes()){
    		GraphicalTreenode graphicalRepr=getGraphicalTreeNodes(n);
    		ret.add(graphicalRepr);
    		
    	}
    	return ret;
    }


    public void sendMessageToPanel(Serializable serializable) {
        ((Panel)mainPanel).receiveMessage(serializable);
    }


    public void updateTree(TreeModel tm) throws RemoteException {
    	//System.err.println("UpdateTree "+tm);
    	String nodename=tm.getRootNode().getName();
    	//System.err.println("Nodename "+nodename);
    	GraphicalTreenode root = getGraphicalTreeNodes(tm.getRootNode());
    	//System.err.println("root "+root);
    	DefaultTreeModel arbreModele = new DefaultTreeModel(root);
        this.navigTree.setModel(arbreModele);
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        navigScrollPane = new javax.swing.JScrollPane();
        navigTree = new javax.swing.JTree();
        mainPanel = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        searchIcon = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        disconnectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RMIAGE");

        splitPane.setDividerLocation(150);

        navigScrollPane.setViewportView(navigTree);

        splitPane.setLeftComponent(navigScrollPane);

        mainPanel.setLayout(new java.awt.BorderLayout());
        splitPane.setRightComponent(mainPanel);

        getContentPane().add(splitPane, java.awt.BorderLayout.CENTER);

        topPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        searchIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rmiage/client/resources/search.png"))); // NOI18N
        topPanel.add(searchIcon);

        searchField.setPreferredSize(new java.awt.Dimension(200, 28));
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        topPanel.add(searchField);

        disconnectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rmiage/client/resources/disconnect.png"))); // NOI18N
        disconnectButton.setBorder(null);
        disconnectButton.setBorderPainted(false);
        disconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectButtonActionPerformed(evt);
            }
        });
        topPanel.add(disconnectButton);

        getContentPane().add(topPanel, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_searchFieldActionPerformed

    private void disconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectButtonActionPerformed
        networkManager.close();
    }//GEN-LAST:event_disconnectButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    private NetworkManager networkManager;
    protected TreeSelectionListener jTreeFocListen;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton disconnectButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane navigScrollPane;
    private javax.swing.JTree navigTree;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchIcon;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
